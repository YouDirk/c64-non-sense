# C64 NonSense, just playing around with C64 cross-compile tools.
# Copyright (C) 2020  Dirk "YouDirk" Lehmann
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


name: CI

on:
  push:
    branches:
    - 'master'
    paths:
    - '**'
  pull_request:
    branches:
    - 'master'
    paths:
    - '**'

# Settings
env:
  # ${{secrets.RELEASE_TOKEN}}
  # ${{secrets.DOCKER_USER}}
  WORKFL_SRC_PATH:                 'src'

# Jobs are running in parallel
jobs:
  docker-cache:
    name: Docker cache updated
    runs-on: ubuntu-latest
    outputs:
      DOCKER_IMAGE: ${{steps.main.outputs.FULL_IMAGE_NAME}}
    steps:
      # Checking out to $GITHUB_WORKSPACE
    - name: Checking out...
      uses: actions/checkout@v2.3.4
      with:
        clean: true
        lfs: false
        submodules: false
    - name: Updating 'actions/cc65+vice-environment'...
      uses: whoan/docker-build-with-cache-action@v5
      id: main
      with:
        username: ${{secrets.DOCKER_USER}}
        password: ${{secrets.RELEASE_TOKEN}}
        registry: docker.pkg.github.com
        image_name: cc65-vice-environment
        context: ./.github/actions/cc65+vice-environment

  compile-linux:
    name: Compiles on Linux
    needs: [docker-cache]
    runs-on: ubuntu-latest
    container:
      image: ${{needs.docker-cache.outputs.DOCKER_IMAGE}}
      credentials:
        username: ${{secrets.DOCKER_USER}}
        password: ${{secrets.RELEASE_TOKEN}}
    steps:
      # Checking out to $GITHUB_WORKSPACE
    - name: Checking out...
      uses: actions/checkout@v2.3.4
      with:
        clean: true
        lfs: false
        submodules: false
    - name: Compiling with Default config, using `$> make all`...
      run: |
        make all
    - name: Compiling with Productive config, using `$> make recompile`...
      run: |
        make DEBUG_BUILD=0 recompile
    - name: Compiling with Full Debug config, using `$> make recompile`...
      run: |
        make DEBUG_BUILD=all recompile

  release-latest-commit:
    name: Latest Commit released
    if: ${{github.event_name == 'push'}}
    needs: [docker-cache, compile-linux]
    runs-on: ubuntu-latest
    container:
      image: ${{needs.docker-cache.outputs.DOCKER_IMAGE}}
      credentials:
        username: ${{secrets.DOCKER_USER}}
        password: ${{secrets.RELEASE_TOKEN}}
    steps:
      # Checking out to $GITHUB_WORKSPACE
    - name: Checking out...
      uses: actions/checkout@v2.3.4
      with:
        clean: true
        lfs: false
        submodules: false
    - name: Building Debug version, using `$> make all`...
      run: |
        make DEBUG_BUILD=1 \
          D64EXT=$(echo $GITHUB_SHA | head -c7).debug.d64 all
        cp -f ${{env.WORKFL_SRC_PATH}}/*.d64 .
    - name: Building Productive version, using `$> make recompile`...
      run: |
        make DEBUG_BUILD=0 \
          D64EXT=$(echo $GITHUB_SHA | head -c7).d64 recompile
        cp -f ${{env.WORKFL_SRC_PATH}}/*.d64 .
    - name: Building Full Debug version, using `$> make recompile`...
      run: |
        make DEBUG_BUILD=all \
          D64EXT=$(echo $GITHUB_SHA | head -c7).debug-full.d64 recompile
        cp -f ${{env.WORKFL_SRC_PATH}}/*.d64 .
    - name: Updating Latest Commit...
      uses: xresloader/upload-to-github-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
      with:
        file: "*.d64"
        delete_file: "*.d64"
        overwrite: true
        draft: true
        prerelease: false
        tags: false
        branches: [master]
        tag_name: latest-commit
        update_latest_release: true
